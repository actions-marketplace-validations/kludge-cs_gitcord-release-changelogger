name: "CD: Release"
on:
  push:
    branches:
      - master
jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: "[INIT] Checkout repository@build"
        uses: actions/checkout@v1
      - name: "[INIT] Setup Node.js 14.x"
        uses: actions/setup-node@v1
        with:
          node-version: 14.x
      - name: "[INIT] Restore dependency cache"
        id: cache-restore
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-node14-${{ hashFiles('**/package-lock.json') }}
      - name: "[INIT] Install dependencies"
        if: steps.cache-restore.outputs.cache-hit != 'true'
        run: npm ci
      - name: "[EXEC] Release"
        run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  build:
    name: Build
    needs: release
    runs-on: ubuntu-latest
    steps:
      - name: "[INIT] Checkout repository"
        uses: actions/checkout@v1
      - name: "[INIT] Setup Node.js 14.x"
        uses: actions/setup-node@v1
        with:
          node-version: 14.x
      - name: "[INIT] Restore dependency cache"
        id: cache-restore
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-node14-${{ hashFiles('**/package-lock.json') }}
      - name: "[INIT] Install dependencies"
        if: steps.cache-restore.outputs.cache-hit != 'true'
        run: npm ci
      - name: "[EXEC] Build"
        run: npm run package
      - name: "[EXEC] Update build branch"
        run: |
          git config --global user.name 'Kludge Cyber Systems (CI)'
          git config --global user.email contact@kludgecs.co.uk
          git clone https://github.com/kludge-cs/gitcord-release-changelogger.git out -b build
          rm -rf out/dist/*
          files="LICENSE README.md CHANGELOG.md package*.json action.yml dist"
          for file in $files; do cp -r $file out || true; done
          cd out
          git add .
          git commit -m "build: latest @${GITHUB_SHA}" || true
          git push origin build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
